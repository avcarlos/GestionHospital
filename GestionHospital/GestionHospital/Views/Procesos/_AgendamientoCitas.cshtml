@using GestionHospital.Models.Procesos
@model AgendamientoCitasView
@{
    var identificacion = ViewData.TemplateInfo.GetFullHtmlFieldId("Identificacion");
    var idEspecialidad = ViewData.TemplateInfo.GetFullHtmlFieldId("IdEspecialidad");
    var idMedico = ViewData.TemplateInfo.GetFullHtmlFieldId("IdMedico");
    var idHorario = ViewData.TemplateInfo.GetFullHtmlFieldId("IdHoraCita");
}
<h2>@ViewBag.Title.</h2>
<h4 id="mensajeError" class="text-danger" style="display:@(string.IsNullOrEmpty(ViewBag.MessageError) ? "none" : string.Empty)">@ViewBag.MessageError.</h4>
<h4 id="mensajeExito" class="text-info" style="display:@(string.IsNullOrEmpty(ViewBag.Message) ? "none" : string.Empty)">@ViewBag.Message.</h4>
<div class="row">
    <div class="col-md-11">
        <section id="medicoForm">
            <script type="text/javascript">
                $(document).ready(function () {
                    $('#agendar').click(function () {
                        $('form').attr('Action', '/Procesos/AgendarCita');
                    });

                    $('#reagendar').click(function () {
                        $('form').attr('Action', '/Procesos/ReagendarCita');
                    });

                    $('#cancelar').click(function () {
                        $('form').attr('Action', '/Procesos/CancelarCita');
                    });

                    $('#limpiar').click(function () {
                        $('form').attr('Action', '/Procesos/AgendamientoCita');
                    });

                    $('#@identificacion').change(
                        function (event) {
                            var identificacionParam = $('#@identificacion').val();

                            $('#mensajeError').hide();
                            $('#mensajeExito').hide();

                            document.getElementById('agendar').disabled = 'disabled';
                            document.getElementById('reagendar').disabled = 'disabled';
                            document.getElementById('cancelar').disabled = 'disabled';

                            $('#IdCita').val(0);
                            $('#IdPersona').val(0);
                            $('#NombrePaciente').val('');
                            $('#Motivo').val('');
                            $('#@idEspecialidad').val(0);
                            $('#@idMedico').val(0);
                            $('#@idHorario').val(0);

                            $('#dropDownEspecialidad').data('kendoDropDownList').dataSource.read();
                            cargarGridCitas();

                            if (identificacionParam == "")
                                return;

                            mostrarVentanaCargando();

                            $.ajax({
                                type: "POST",
                                url: '@Url.Action("ConsultarPacienteCita", "Procesos")',
                                data: { identificacion: identificacionParam },
                                success: function (result) {
                                    if (result != "") {
                                        $('#IdPersona').val(result.idPersona);
                                        $('#NombrePaciente').val(result.nombrePaciente);

                                        document.getElementById('agendar').disabled = '';

                                        cargarGridCitas();
                                    } else {
                                        alert('No existe el paciente ingresado');
                                    }
                                },
                                error: function (err) {
                                    alert('Error al consultar paciente: ' + err.responseJSON);
                                },
                                complete: function () {
                                    cerrarVentanaCargando();
                                }
                            });
                        }
                    );
                })

                function cargarGridCitas() {
                    var idPersonaParam = $('#IdPersona').val();

                    $('#GridCitas').data('kendoGrid').dataSource.read({ IdPaciente: idPersonaParam });
                }

                function onRowSelectedCita() {
	                var selectedRow;
	                var grid = this;

	                grid.select().each(function () {
		                selectedRow = grid.dataItem($(this));
                    });

                    $('.datosCita').show();
                    document.getElementById('agendar').disabled = 'disabled';
                    document.getElementById('reagendar').disabled = '';
                    document.getElementById('cancelar').disabled = '';

                    $('#IdCita').val(selectedRow.IdCita);
                    $('#FechaCita').data('kendoDatePicker').value(selectedRow.Fecha);
                    $('#Motivo').val(selectedRow.Motivo);

                    $('#dropDownEspecialidad').data('kendoDropDownList').value(selectedRow.IdEspecialidad);

                    $('#dropDownMedico').data('kendoDropDownList').dataSource.read({ idEspecialidad: selectedRow.IdEspecialidad });

                    setTimeout(function () {
                        $('#dropDownMedico').data('kendoDropDownList').value(selectedRow.IdMedico);
                        setTimeout(function () {
                            $('#dropDownHorario').data('kendoDropDownList').value(selectedRow.IdHorario);
                        }, 1000);
                    }, 1000);
                }

                function validarMaximoCitas() {
                    var grid = $("#GridCitas").data("kendoGrid");
                    var data = grid.dataSource.data();
                    var len = data.length;

                    if (len > 1) {
                        $('.datosCita').hide();
                        document.getElementById('agendar').disabled = 'disabled';
                    } else {
                        $('.datosCita').show();
                    }
                }

                function filtrarDatosConsultaMedicos() {
                    return { idEspecialidad: $('#dropDownEspecialidad').data('kendoDropDownList').value() };
                }

                function consultarHorariosDisponibles(e) {
                    var idPersonaParam = $('#IdPersona').val();
                    var idMedicoParam = $('#dropDownMedico').data('kendoDropDownList').value();
                    var fechaParam = $('#FechaCita').val();
                    var idCitaParam = $('#IdCita').val();

                    $('#dropDownHorario').data('kendoDropDownList').dataSource.read({ idPaciente: idPersonaParam, idMedico: idMedicoParam, fechaCita: fechaParam, idCita: idCitaParam });
                }

                function filtrarDatosConsultaHorarios() {
                    var idPersonaParam = $('#IdPersona').val();
                    var idMedicoParam = $('#dropDownMedico').data('kendoDropDownList').value();
                    var fechaParam = $('#FechaCita').val();
                    var idCitaParam = $('#IdCita').val();

                    return { idPaciente: idPersonaParam, idMedico: idMedicoParam, fechaCita: fechaParam, idCita: idCitaParam };
                }

                function onDataBindingDropDown() {
                    var idEspecialidadParam = $('#dropDownEspecialidad').data('kendoDropDownList')
                    if (idEspecialidadParam != undefined)
                        $('#@idEspecialidad').val($('#dropDownEspecialidad').data('kendoDropDownList').value());

                    var idMedicoParam = $('#dropDownMedico').data('kendoDropDownList')
                    if (idMedicoParam != undefined)
                        $('#@idMedico').val($('#dropDownMedico').data('kendoDropDownList').value());

                    var idHorarioParam = $('#dropDownHorario').data('kendoDropDownList')
                    if (idHorarioParam != undefined)
                        $('#@idHorario').val($('#dropDownHorario').data('kendoDropDownList').value());
                }
            </script>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <table style="width: 80%">
                    <tr>
                        <td style="width:20%">
                            Identificación:
                        </td>
                        <td>
                            @if (Model.EsPaciente)
                            {
                                @Html.TextBoxFor(m => m.Identificacion, new { @readonly = "readonly", @class = "form-control" })
                            }
                            else
                            {
                                @Html.TextBoxFor(m => m.Identificacion, new { @class = "form-control" })
                            }
                            @Html.ValidationMessageFor(m => m.Identificacion, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td>
                            Paciente:
                        </td>
                        <td>
                            @Html.TextBoxFor(m => m.NombrePaciente, new { @readonly = "readonly", @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.NombrePaciente, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td>
                            Citas:
                        </td>
                    </tr>
                    <tr>
                        <td colspan="3">
                            @(
                                Html.Kendo()
                                .Grid<GestionHospital.Model.Shared.CitaMedica>()
                                .Name("GridCitas")
                                .Columns(c =>
                                {
                                    c.Bound(col => col.IdCita).Hidden();
                                    c.Bound(col => col.IdEspecialidad).Hidden();
                                    c.Bound(col => col.IdMedico).Hidden();
                                    c.Bound(col => col.Motivo).Hidden();
                                    c.Bound(col => col.IdHorario).Hidden();
                                    c.Bound(col => col.NombreEspecialidad).Title("Especialidad");
                                    c.Bound(col => col.NombreMedico).Title("Médico");
                                    c.Bound(col => col.Fecha).Title("Fecha").Format("{0:dd/MM/yyyy}");
                                    c.Bound(col => col.NombreHorario).Title("Horario");
                                })
                                .Selectable()
                                .DataSource(dataBinding => dataBinding.Ajax()
                                    .Read("CargarCitasPendientesPaciente", "Procesos", new { idPaciente = Model.IdPersona}))
                                .Events(events => events.Change("onRowSelectedCita").DataBound("validarMaximoCitas"))
                                .AutoBind(false)
                            )
                        </td>
                    </tr>
                    <tr class="datosCita">
                        <td>
                            Especialidad:
                        </td>
                        <td>
                            @(Html.Kendo().DropDownListFor(model => model.IdEspecialidad)
	                            .Name("dropDownEspecialidad")
	                            .DataTextField("Nombre")
	                            .DataValueField("IdEspecialidad")
	                            .DataSource(dataBinding =>
		                            dataBinding.Read("ConsultarEspecilidadesCita", "Procesos"))
                                .AutoWidth(true)
                                .HtmlAttributes(new { style = "width: 50%" }))
                            @Html.ValidationMessageFor(m => m.IdEspecialidad, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr class="datosCita">
                        <td>
                            Médico:
                        </td>
                        <td>
                            @(Html.Kendo().DropDownListFor(model => model.IdMedico)
                                .Name("dropDownMedico")
                                .DataValueField("IdPersona")
                                .DataTextField("NombreMedico")
                                .CascadeFrom("dropDownEspecialidad")
                                .DataSource(db => db.Read(r => r.Action("ConsultarMedicosCita", "Procesos").Data("filtrarDatosConsultaMedicos"))
                                .ServerFiltering(true))
                                .Events(events => events.Change("onDataBindingDropDown"))
                                .AutoWidth(true)
                                .HtmlAttributes(new { style = "width: 50%" }))
                            @Html.ValidationMessageFor(m => m.IdMedico, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr class="datosCita">
                        <td>
                            Fecha:
                        </td>
                        <td>
                            @Html.Kendo().DatePickerFor(model => model.FechaCita).Min(Model.FechaActual).Events(evt => evt.Change("consultarHorariosDisponibles"))
                            @Html.ValidationMessageFor(m => m.FechaCita, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr class="datosCita">
                        <td>
                            Hora:
                        </td>
                        <td>
                            @(Html.Kendo().DropDownListFor(model => model.IdHoraCita)
                                .Name("dropDownHorario")
                                .DataValueField("IdHorario")
                                .DataTextField("Nombre")
                                .CascadeFrom("dropDownMedico")
                                .DataSource(db => db.Read(r => r.Action("ConsultarHorariosCita", "Procesos").Data("filtrarDatosConsultaHorarios"))
                                .ServerFiltering(true))
                                .Events(events => events.Change("onDataBindingDropDown"))
                                .AutoWidth(true))
                            @Html.ValidationMessageFor(m => m.IdHoraCita, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr class="datosCita">
                        <td>
                            Motivo
                        </td>
                        <td colspan="2">
                            @Html.TextAreaFor(m => m.Motivo, 3, 500, new { style = "width: 80%; max-width: 100%", @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Motivo, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                </table>
                <hr />
                <table>
                    <tr>
                        <td>
                            <input type="submit" id="agendar" value="Agendar Cita" class="btn btn-default" @(string.IsNullOrEmpty(Model.Identificacion) ? "disabled" : "") />
                            <input type="submit" id="reagendar" value="Reagendar Cita" class="btn btn-default" disabled />
                            <input type="submit" id="cancelar" value="Cancelar Cita" class="btn btn-default" disabled />
                            <input type="submit" id="limpiar" value="Limpiar" class="btn btn-default" />
                        </td>
                    </tr>
                </table>
                @Html.HiddenFor(m => m.IdPersona)
                @Html.HiddenFor(m => m.IdCita)
                @Html.HiddenFor(m => m.EsPaciente)
                @Html.HiddenFor(m => m.FechaActual)
                @Html.HiddenFor(m => m.IdEspecialidad)
                @Html.HiddenFor(m => m.IdMedico)
                @Html.HiddenFor(m => m.IdHoraCita)

                <script type="text/javascript">
                    $(document).ready(function () {
                        $('#@identificacion').trigger("change");
                    })
                </script>
            }
        </section>
    </div>
</div>