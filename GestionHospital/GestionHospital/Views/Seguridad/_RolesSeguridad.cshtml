@using GestionHospital.Models.Seguridad
@model RolesSeguridadView
@{
    IEnumerable<SelectListItem> estadosRoles = new List<SelectListItem>
    {
        new SelectListItem{ Value = "1", Text = "Activo" },
        new SelectListItem{ Value = "0", Text = "Inactivo" }
    };
}
<h2>@ViewBag.Title.</h2>
<h4 id="mensajeError" class="text-danger" style="display:@(string.IsNullOrEmpty(ViewBag.MessageError) ? "none" : string.Empty)">@ViewBag.MessageError.</h4>
<h4 id="mensajeExito" class="text-info" style="display:@(string.IsNullOrEmpty(ViewBag.Message) ? "none" : string.Empty)">@ViewBag.Message.</h4>
<div class="row">
    <div class="col-md-11">
        <section id="permisosForm">
            <script type="text/javascript">
                $(document).ready(function () {
                    $('#guardar').click(function () {
                        $('form').attr('Action', '/Seguridad/GuardarRolSeguridad');
                    });

                    $('#actualizar').click(function () {
                        $('form').attr('Action', '/Seguridad/ActualizarRolSeguridad');
                    });

                    $('#eliminar').click(function () {
                        $('form').attr('Action', '/Seguridad/EliminarRolSeguridad');
                    });

                    $('#limpiar').click(function () {
                        $('form').attr('Action', '/Seguridad/Roles');
                    });
                })

                function mostrarErrorGrid(e) {
                    if (e.status = "error") {
                        var message = e.xhr.responseText;
                        alert(message);
                    }
                }

                function refrescarGridTransacciones() {
                    var idRolSeguridadTemp = $('#IdRolSeguridad').val();
                    var idTempParam = $('#IdTemp').val();

                    $('#GridTransacciones').data('kendoGrid').dataSource.read({ idRolSeguridad: idRolSeguridadTemp, idTemp: idTempParam });
                }

                function parametrosGrid() {
                    var idRolSeguridadTemp = $('#IdRolSeguridad').val();
                    var idTempParam = $('#IdTemp').val();

                    return { idRolSeguridad: idRolSeguridadTemp, idTemp: idTempParam };
                }

                function onRowSelectedRolSeguridad() {
                    var selectedRow;
                    var grid = this;

                    grid.select().each(function () {
                        selectedRow = grid.dataItem($(this));
                    });

                    $('#cancelar').show();
                    document.getElementById('guardar').disabled = 'disabled';
                    document.getElementById('eliminar').disabled = 'disabled';
                    document.getElementById('actualizar').disabled = '';

                    $('#EstadoRol').data('kendoComboBox').enable(false);

                    $('#IdRolSeguridad').val(selectedRow.IdRolSeguridad);
                    $('#NombreRol').val(selectedRow.Nombre);
                    $('#DescripcionRol').val(selectedRow.Descripcion);
                    $('#EstadoRol').data('kendoComboBox').value(selectedRow.Estado ? "1" : "0");
                    $('#EstadoOriginalRol').val(selectedRow.Estado);

                    if (!selectedRow.Estado) {
                        $('#EstadoRol').data('kendoComboBox').enable(true);
                    } else {
                        document.getElementById('eliminar').disabled = '';
                    }

                    refrescarGridTransacciones();
                }

                function cancelarEdicionRolSeguridad() {
                    $('#cancelar').hide();
                    document.getElementById('guardar').disabled = '';
                    document.getElementById('actualizar').disabled = 'disabled';
                    document.getElementById('eliminar').disabled = 'disabled';

                    $('#EstadoRol').data('kendoComboBox').enable(false);

                    $('#IdRolSeguridad').val(0);
                    $('#NombreRol').val('');
                    $('#DescripcionRol').val('');
                    $('#EstadoRol').data('kendoComboBox').value("0");
                    $('#EstadoOriginalRol').val('');

                    refrescarGridTransacciones();
                }
            </script>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <table style="width: 80%">
                    <tr>
                        <td colspan="3">
                            @(
                                Html.Kendo()
                                .Grid<GestionHospital.Model.Shared.RolSeguridad>()
                                .Name("GridRolesSeguridad")
                                .Columns(c =>
                                {
                                    c.Bound(col => col.IdRolSeguridad).Hidden();
                                    c.Bound(col => col.Nombre).Title("Rol");
                                    c.Bound(col => col.Descripcion).Title("Descripción");
                                    c.Bound(col => col.Estado).Title("Estado").ClientTemplate("#: Estado ? 'Activo' : 'Inactivo' #");
                                })
                                .Selectable()
                                .DataSource(dataBinding => dataBinding.Ajax()
                                    .Read("CargarGridRolesSeguridad", "Seguridad"))
                                .Events(events => events.Change("onRowSelectedRolSeguridad"))
                                .Scrollable()
                            )
                        </td>
                    </tr>
                    <tr>
                        <td style="width:20%">
                            Nombre:
                        </td>
                        <td>
                            @Html.TextBoxFor(m => m.NombreRol, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.NombreRol, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td>
                            Descripción:
                        </td>
                        <td>
                            @Html.TextAreaFor(m => m.DescripcionRol, new { style = "width:100%; height:80%", @class = "form-control" })
                        </td>
                    </tr>
                    <tr>
                        <td>
                            Estado:
                        </td>
                        <td>
                            @Html.Kendo().ComboBoxFor(model => model.EstadoRol).BindTo(new SelectList(estadosRoles, "Value", "Text")).Enable(false)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            Permisos:
                        </td>
                        <td colspan="3">
                            @(
                                Html.Kendo()
                                    .Grid<GestionHospital.Model.Shared.Transaccion>()
                                    .Name("GridTransacciones")
                                    .Columns(c =>
                                    {
                                        c.Bound(col => col.IdTransaccionRolSeguridad).Hidden(true);
                                        c.ForeignKey(h => h.IdTransaccion, Model.ListaTransacciones, "IdTransaccion", "Nombre").Title("Transacción").HeaderHtmlAttributes(new { style = "text-align:center" });
                                        c.Command(command =>
                                        {
                                            command.Edit().Text("Editar").UpdateText("Guardar").CancelText("Cancelar");
                                            command.Destroy().Text("Eliminar");
                                        }).Width(250);
                                    })
                                    .DataSource(dataBinding => dataBinding.Ajax()
                                        .Events(events => events.Error("mostrarErrorGrid").Sync("refrescarGridTransacciones"))
                                        .Model(model =>
                                        {
                                            model.Id(m => m.IdTransaccionRolSeguridad);
                                        })
                                            .Read(read => read.Action("ConsultarTransaccionesRolSeguridad", "Seguridad").Data("parametrosGrid"))
                                            .Update(update => update.Action("ActualizarTransaccionRolSeguridad", "Seguridad").Data("parametrosGrid"))
                                            .Create(create => create.Action("GuardarTransaccionRolSeguridad", "Seguridad").Data("parametrosGrid"))
                                            .Destroy(destroy => destroy.Action("EliminarTransaccionRolSeguridad", "Seguridad").Data("parametrosGrid"))
                                        )
                                    .ToolBar(toolBar => toolBar.Create().Text("Nuevo"))
                                    .Editable(editable => editable.Mode(Kendo.Mvc.UI.GridEditMode.InLine).ConfirmDelete("Eliminar transacción").DisplayDeleteConfirmation("Seguro desea eliminar la transacción?"))
                                    .Scrollable(s => s.Height("auto"))
                                    .Resizable(r => r.Columns(true))
                            )
                        </td>
                    </tr>
                </table>
                <hr />
                <table>
                    <tr>
                        <td>
                            <input type="submit" id="guardar" value="Guardar" class="btn btn-default" />
                            <input type="submit" id="actualizar" value="Actualizar" class="btn btn-default" disabled />
                            <input type="submit" id="eliminar" value="Eliminar" class="btn btn-default" disabled />
                            <input type="button" id="cancelar" value="Cancelar" class="btn btn-default" onclick="cancelarEdicionRolSeguridad()" style="display:none" />
                            <input type="submit" id="limpiar" value="Limpiar" class="btn btn-default" />
                        </td>
                    </tr>
                </table>
                @Html.HiddenFor(m => m.IdRolSeguridad)
                @Html.HiddenFor(m => m.EstadoOriginalRol)
                @Html.HiddenFor(m => m.IdTemp)
            }
        </section>
    </div>
</div>